---
import Layout from '../../layouts/Layout.astro';
import PromptCard from '../../components/PromptCard.astro';
import PromptFilter from '../../components/PromptFilter.astro';

// Get query parameters for server-side rendering
const category = Astro.url.searchParams.get('category') || '';
const query = Astro.url.searchParams.get('q') || '';

// Fetch all prompts first to get accurate stats for initial load
let allPrompts = [];
let prompts = [];

try {
  // Always fetch all prompts first for accurate statistics
  const allPromptsResponse = await fetch(`${Astro.url.origin}/api/prompts`);
  if (allPromptsResponse.ok) {
    allPrompts = await allPromptsResponse.json();
  }
  
  // Then fetch filtered prompts if needed for initial render
  if (category || query) {
    const searchParams = new URLSearchParams();
    if (category) searchParams.set('category', category);
    if (query) searchParams.set('q', query);
    
    const searchResponse = await fetch(`${Astro.url.origin}/api/search?${searchParams.toString()}`);
    if (searchResponse.ok) {
      const data = await searchResponse.json();
      prompts = data.results || [];
    }
  } else {
    // If no filters, use all prompts
    prompts = allPrompts;
  }
} catch (error) {
  console.error('Error fetching prompts:', error);
}

// Calculate stats based on ALL prompts, not filtered ones
const stats = {
  total: allPrompts.length,
  work: allPrompts.filter((p: any) => p.category === 'work').length,
  personal: allPrompts.filter((p: any) => p.category === 'personal').length,
  shared: allPrompts.filter((p: any) => p.category === 'shared').length,
};

// Get page title based on filters
const getPageTitle = () => {
  if (category) {
    return `${category.charAt(0).toUpperCase() + category.slice(1)} Prompts`;
  }
  if (query) {
    return `Search Results for "${query}"`;
  }
  return 'All Prompts';
};
---

<Layout title={`${getPageTitle()} - Prompt Craft`}>
  <!-- Stunning Hero Header -->
  <div class="mb-12 animate-slide-up">
    <div class="text-center sm:text-left">
      <!-- Breadcrumb and Status -->
      <div class="flex flex-wrap items-center justify-center sm:justify-start gap-3 mb-6">
        <div class="inline-flex items-center px-3 py-1 bg-dark-800/50 border border-dark-600/50 rounded-full text-xs font-medium text-gray-400">
          <svg class="w-3 h-3 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          Prompt Library
        </div>
        {category && (
          <div class={`inline-flex items-center px-3 py-1 rounded-full text-xs font-semibold ${
            category === 'work' ? 'bg-primary-600/20 text-primary-300 border border-primary-500/30' :
            category === 'personal' ? 'bg-accent-600/20 text-accent-300 border border-accent-500/30' :
            category === 'shared' ? 'bg-success-600/20 text-success-300 border border-success-500/30' :
            'bg-gray-600/20 text-gray-300 border border-gray-500/30'
          }`}>
            <div class={`w-2 h-2 rounded-full mr-2 ${
              category === 'work' ? 'bg-primary-400' :
              category === 'personal' ? 'bg-accent-400' :
              category === 'shared' ? 'bg-success-400' :
              'bg-gray-400'
            }`}></div>
            {category.charAt(0).toUpperCase() + category.slice(1)} Category
          </div>
        )}
        {query && (
          <div class="inline-flex items-center px-3 py-1 bg-amber-600/20 text-amber-300 border border-amber-500/30 rounded-full text-xs font-semibold">
            <svg class="w-3 h-3 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            Search Results
          </div>
        )}
      </div>

      <!-- Main Title -->
      <h1 class="text-3xl sm:text-4xl lg:text-5xl font-bold text-balance mb-4">
        {category ? (
          <span class="bg-gradient-to-r from-gray-100 via-primary-300 to-accent-400 bg-clip-text text-transparent">
            {category.charAt(0).toUpperCase() + category.slice(1)} Prompts
          </span>
        ) : query ? (
          <span>
            <span class="bg-gradient-to-r from-gray-100 to-gray-300 bg-clip-text text-transparent">Search: </span>
            <span class="bg-gradient-to-r from-amber-400 via-amber-500 to-orange-500 bg-clip-text text-transparent">"{query}"</span>
          </span>
        ) : (
          <span class="bg-gradient-to-r from-gray-100 via-primary-300 to-accent-400 bg-clip-text text-transparent">
            Your Prompt Library
          </span>
        )}
      </h1>

      <!-- Description -->
      <p class="text-lg text-gray-300 max-w-2xl text-balance leading-relaxed mb-2">
        {category ? `Explore your ${category} prompts and templates designed for specific workflows.` :
         query ? `Found ${prompts.length} prompt${prompts.length !== 1 ? 's' : ''} matching your search criteria.` :
         'Discover, organize, and master your AI prompt collection.'}
      </p>
      <p class="text-gray-400 max-w-2xl text-balance">
        {category ? 'Optimized for productivity and precision.' :
         query ? 'Refine your search or explore categories for better results.' :
         'Every prompt is crafted to unlock AI\'s full potential for your unique needs.'}
      </p>
    </div>
  </div>

  <!-- Client-side Filter Component -->
  <PromptFilter 
    initialCategory={category}
    initialQuery={query}
    initialStats={stats}
  />

  <!-- Enhanced Action Bar -->
  <div class="glass-card rounded-xl shadow-xl p-6 mb-8 animate-slide-up" style="animation-delay: 0.2s;">
    <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
      <!-- Statistics and Info -->
      <div class="flex items-center space-x-6">
        <div class="flex items-center space-x-3">
          <div class="stat-indicator bg-gradient-to-br from-primary-500 to-primary-600">
            <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <div>
            <p class="text-lg font-bold text-gray-100">{prompts.length}</p>
            <p class="text-xs text-gray-400 -mt-0.5">prompt{prompts.length !== 1 ? 's' : ''} found</p>
          </div>
        </div>
        
        {!category && !query && stats.total > 0 && (
          <div class="hidden sm:flex items-center space-x-3 text-xs text-gray-400">
            <div class="flex items-center space-x-1">
              <div class="w-2 h-2 bg-primary-500 rounded-full"></div>
              <span>{stats.work} work</span>
            </div>
            <div class="flex items-center space-x-1">
              <div class="w-2 h-2 bg-accent-500 rounded-full"></div>
              <span>{stats.personal} personal</span>
            </div>
            <div class="flex items-center space-x-1">
              <div class="w-2 h-2 bg-success-500 rounded-full"></div>
              <span>{stats.shared} shared</span>
            </div>
          </div>
        )}
        
        {query && (
          <div class="flex items-center px-3 py-1 bg-amber-600/20 text-amber-300 border border-amber-500/30 rounded-full text-xs font-medium">
            <svg class="w-3 h-3 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
            Search active
          </div>
        )}
      </div>
      
      <!-- Action Buttons -->
      <div class="flex items-center space-x-3">
        {query && (
          <a href="/prompts" class="action-btn action-btn-secondary">
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Clear Search
          </a>
        )}
        
        <a href="/search" class="action-btn action-btn-secondary">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
          Advanced Search
        </a>
        
        <a href="/mcp" class="action-btn action-btn-special">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          <span class="hidden sm:inline">MCP Server</span>
          <span class="sm:hidden">MCP</span>
        </a>
        
        <a href="/prompts/new" class="action-btn action-btn-primary">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Create New
        </a>
      </div>
    </div>
  </div>

  <!-- Beautiful Prompts Grid -->
  {prompts.length > 0 ? (
    <div class="prompts-grid animate-slide-up" style="animation-delay: 0.3s;">
      {prompts.map((prompt: any) => (
        <PromptCard key={prompt.id} prompt={prompt} />
      ))}
    </div>
  ) : (
    <div class="glass-card rounded-xl shadow-xl p-12 text-center animate-slide-up" style="animation-delay: 0.3s;">
      <!-- Beautiful Empty State Illustration -->
      <div class="relative mx-auto w-32 h-32 mb-8">
        <div class="absolute inset-0 bg-gradient-to-br from-primary-500/20 to-accent-500/20 rounded-full animate-pulse"></div>
        <div class="absolute inset-2 bg-gradient-to-br from-dark-800 to-dark-900 rounded-full border border-dark-600/50"></div>
        <div class="absolute inset-0 flex items-center justify-center">
          {category === 'work' ? (
            <svg class="w-12 h-12 text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2-2v2m8 0V6a2 2 0 012 2v6a2 2 0 01-2 2H8a2 2 0 01-2-2V8a2 2 0 012-2h8z"></path>
            </svg>
          ) : category === 'personal' ? (
            <svg class="w-12 h-12 text-accent-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
            </svg>
          ) : category === 'shared' ? (
            <svg class="w-12 h-12 text-success-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
            </svg>
          ) : query ? (
            <svg class="w-12 h-12 text-amber-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
            </svg>
          ) : (
            <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          )}
        </div>
      </div>
      
      <!-- Engaging Title -->
      <h3 class="text-xl font-bold text-gray-100 mb-3">
        {category ? `No ${category} prompts found` : 
         query ? 'No matching prompts' : 
         'Your prompt library awaits'}
      </h3>
      
      <!-- Description -->
      <p class="text-gray-300 mb-2 max-w-md mx-auto">
        {category ? `Ready to create your first ${category} prompt? These are perfect for specialized workflows and targeted AI interactions.` :
         query ? `We couldn't find any prompts matching "${query}". Try different keywords or explore our categories.` :
         'This is where your AI prompt collection will live. Start by creating your first prompt or exploring examples.'}
      </p>
      
      <p class="text-sm text-gray-400 mb-8 max-w-md mx-auto">
        {category ? 'Click below to start crafting prompts that boost your productivity.' :
         query ? 'You can also browse all prompts or create a new one from scratch.' :
         'Every great AI workflow starts with the perfect prompt.'}
      </p>
      
      <!-- Action Buttons -->
      <div class="flex flex-col sm:flex-row gap-4 items-center justify-center">
        {query ? (
          <>
            <a href="/prompts" class="action-btn action-btn-secondary">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
              </svg>
              View All Prompts
            </a>
            <a href="/search" class="action-btn action-btn-secondary">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
              Try Advanced Search
            </a>
          </>
        ) : (
          <>
            <a href="/prompts/new" class="action-btn action-btn-primary">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
              </svg>
              Create First Prompt
            </a>
            {category && (
              <a href="/prompts" class="action-btn action-btn-secondary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14-4H3m16 8H1"></path>
                </svg>
                Browse All Categories
              </a>
            )}
          </>
        )}
        
        <a href="/mcp" class="action-btn action-btn-special text-sm">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          Explore MCP Server
        </a>
      </div>
    </div>
  )}
</Layout>

<style>
  /* Filter Tab Styles */
  .filter-tab {
    @apply relative flex items-center px-4 py-3 rounded-lg transition-all duration-300;
    @apply text-sm font-medium border no-underline;
    @apply transform hover:scale-[1.02] hover:-translate-y-0.5;
    min-width: 140px;
  }
  
  .filter-tab-active {
    @apply bg-gradient-to-r from-primary-600/20 to-accent-600/10;
    @apply border-primary-500/30 text-primary-300;
    @apply shadow-lg shadow-primary-500/20;
  }
  
  .filter-tab-inactive {
    @apply bg-dark-800/30 border-dark-600/50 text-gray-400;
    @apply hover:bg-dark-700/50 hover:border-dark-500/60 hover:text-gray-300;
    @apply hover:shadow-md;
  }
  
  .filter-tab-icon {
    @apply w-8 h-8 rounded-lg flex items-center justify-center;
    @apply shadow-md group-hover:scale-110 transition-transform duration-200;
  }
  
  .filter-tab-content {
    @apply flex flex-col items-start;
  }
  
  .filter-tab-count {
    @apply text-xs opacity-75 font-mono;
  }
  
  .filter-tab-indicator {
    @apply absolute -bottom-1 left-1/2 transform -translate-x-1/2;
    @apply w-12 h-0.5 rounded-full transition-all duration-300;
  }
  
  .filter-tab-active .filter-tab-indicator {
    @apply bg-gradient-to-r from-primary-500 to-accent-500;
  }
  
  /* Stat Indicator */
  .stat-indicator {
    @apply w-10 h-10 rounded-xl flex items-center justify-center;
    @apply shadow-lg transform group-hover:scale-110 transition-transform duration-200;
  }
  
  /* Action Button Styles */
  .action-btn {
    @apply inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg;
    @apply transition-all duration-200 no-underline;
    @apply transform hover:scale-105 hover:-translate-y-0.5;
    @apply focus:outline-none focus:ring-2 focus:ring-offset-1;
  }
  
  .action-btn-primary {
    @apply bg-gradient-to-r from-primary-600 to-primary-700 text-white;
    @apply hover:from-primary-700 hover:to-primary-800;
    @apply shadow-lg hover:shadow-xl hover:shadow-primary-500/25;
    @apply focus:ring-primary-400;
  }
  
  .action-btn-secondary {
    @apply bg-dark-800/50 border border-dark-600/50 text-gray-300;
    @apply hover:bg-dark-700/60 hover:border-dark-500/60 hover:text-gray-200;
    @apply shadow-md hover:shadow-lg;
    @apply focus:ring-gray-400;
  }
  
  .action-btn-special {
    @apply bg-gradient-to-r from-accent-600/20 to-purple-600/20;
    @apply border border-accent-500/30 text-accent-300;
    @apply hover:from-accent-600/30 hover:to-purple-600/30;
    @apply hover:border-accent-400/50 hover:text-accent-200;
    @apply shadow-lg hover:shadow-xl hover:shadow-accent-500/25;
    @apply focus:ring-accent-400;
  }
  
  /* Animations */
  @keyframes slide-up {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slide-up 0.6s ease-out forwards;
  }
  
  /* Mobile Optimizations */
  @media (max-width: 640px) {
    .filter-tab {
      @apply hover:scale-100 hover:translate-y-0 min-w-full;
    }
    
    .filter-tab-content {
      @apply items-center;
    }
    
    .action-btn {
      @apply hover:scale-100 hover:translate-y-0 w-full justify-center;
    }
    
    .stat-indicator {
      @apply w-8 h-8;
    }
  }
  
  /* Enhanced Glass Card Hover Effects */
  .glass-card:hover {
    @apply shadow-2xl;
    transform: translateY(-2px);
  }
  
  .glass-card:hover::before {
    @apply opacity-100;
  }
  
  /* Responsive Grid Improvements */
  @media (min-width: 1536px) {
    .prompts-grid {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  
  .prompts-grid {
    @apply grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6;
  }
</style>
