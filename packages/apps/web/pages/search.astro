---
import Layout from '../layouts/Layout.astro';
import SearchBar from '../components/SearchBar.astro';
import PromptCard from '../components/PromptCard.astro';

// Get search parameters from URL
const query = Astro.url.searchParams.get('q') || '';
const category = Astro.url.searchParams.get('category') || '';
const tagsParam = Astro.url.searchParams.get('tags') || '';
const tags = tagsParam ? tagsParam.split(',').map(t => t.trim()) : [];
const author = Astro.url.searchParams.get('author') || '';

// Fetch search results if there are search parameters
let searchResults = [];
let hasSearched = false;

if (query || category || tags.length > 0 || author) {
  hasSearched = true;
  try {
    const searchParams = new URLSearchParams();
    if (query) searchParams.set('q', query);
    if (category) searchParams.set('category', category);
    if (tags.length > 0) searchParams.set('tags', tags.join(','));
    if (author) searchParams.set('author', author);
    
    const response = await fetch(`${Astro.url.origin}/api/search?${searchParams.toString()}`);
    if (response.ok) {
      const data = await response.json();
      searchResults = data.results || [];
    }
  } catch (error) {
    console.error('Error fetching search results:', error);
  }
}
---

<Layout title="Search Prompts - Prompt Craft">
  <!-- Hero Section -->
  <div class="mb-12">
    <div class="text-center mb-8">
      <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-primary-600/20 to-accent-600/20 border border-primary-500/30 rounded-full text-sm font-semibold text-primary-300 backdrop-blur-sm mb-4">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
        üîç AI-Powered Discovery
      </div>
      <h1 class="text-4xl sm:text-5xl font-bold text-balance mb-4">
        <span class="bg-gradient-to-r from-gray-100 via-primary-300 to-accent-400 bg-clip-text text-transparent">
          Find Your Perfect
        </span>
        <br>
        <span class="bg-gradient-to-r from-accent-400 via-accent-500 to-accent-600 bg-clip-text text-transparent">
          Prompt
        </span>
      </h1>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto text-balance leading-relaxed">
        Search through your prompt library with intelligent filters and semantic understanding.
      </p>
    </div>
  </div>

  <!-- Enhanced Search Interface -->
  <div class="glass-card rounded-xl shadow-2xl p-8 mb-8">
    <SearchBar 
      initialQuery={query} 
      initialCategory={category} 
      initialTags={tags} 
    />
  </div>

  <!-- Enhanced Search Results -->
  <div id="results-container">
    {hasSearched && (
      <div class="space-y-6">
        <!-- Results Header -->
        <div class="glass-card rounded-xl p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-xl font-bold text-gray-100 flex items-center">
              <svg class="w-6 h-6 mr-3 text-accent-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2H9z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5a2 2 0 012-2h2a2 2 0 012 2v0a2 2 0 01-2 2H9a2 2 0 01-2-2v0z"></path>
              </svg>
              Search Results
            </h2>
            <div class="flex items-center space-x-3">
              <span class="inline-flex items-center px-3 py-1 bg-accent-900/30 text-accent-300 rounded-full text-sm font-medium border border-accent-700/30">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                </svg>
                {searchResults.length} result{searchResults.length !== 1 ? 's' : ''}
              </span>
            </div>
          </div>
        </div>

        {searchResults.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6" id="search-results">
            {searchResults.map((prompt: any) => (
              <PromptCard key={prompt.id} prompt={prompt} />
            ))}
          </div>
        ) : (
          <div class="glass-card rounded-xl p-12 text-center">
            <div class="w-16 h-16 mx-auto mb-6 bg-gradient-to-br from-gray-600 to-gray-700 rounded-full flex items-center justify-center">
              <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-gray-200 mb-3">No results found</h3>
            <p class="text-gray-400 mb-6 max-w-md mx-auto">We couldn't find any prompts matching your search criteria. Try adjusting your filters or explore all prompts.</p>
            <div class="flex flex-col sm:flex-row gap-4 items-center justify-center">
              <a href="/prompts" class="btn-primary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                </svg>
                Explore All Prompts
              </a>
              <a href="/prompts/new" class="btn-secondary">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                Create New Prompt
              </a>
            </div>
          </div>
        )}
      </div>
    )}

    {!hasSearched && (
      <div class="glass-card rounded-xl p-12 text-center">
        <div class="w-20 h-20 mx-auto mb-6 bg-gradient-to-br from-primary-600 to-accent-600 rounded-full flex items-center justify-center animate-pulse">
          <svg class="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold text-gray-100 mb-3">Ready to Discover</h3>
        <p class="text-gray-300 mb-6 max-w-md mx-auto">Enter your search criteria above to find the perfect prompts for your needs. Use filters to narrow down results.</p>
        <div class="inline-flex items-center px-4 py-2 bg-dark-800/50 border border-dark-600/50 rounded-full text-sm text-gray-400">
          <svg class="w-4 h-4 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
          </svg>
          AI-powered search ready
        </div>
      </div>
    )}
  </div>
</Layout>

<!-- Enhanced Styles for Search Page -->
<style>
  /* Button Styles */
  .btn-primary {
    @apply inline-flex items-center px-6 py-3 text-sm font-semibold rounded-lg;
    @apply bg-gradient-to-r from-primary-600 to-primary-700 text-white border border-primary-500/50;
    @apply hover:from-primary-700 hover:to-primary-800 hover:border-primary-400/50 hover:shadow-lg hover:shadow-primary-500/25;
    @apply focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 focus:ring-offset-dark-900;
    @apply transition-all duration-200 transform hover:scale-105 active:scale-95;
  }

  .btn-secondary {
    @apply inline-flex items-center px-4 py-2 text-sm font-medium rounded-lg;
    @apply bg-dark-800/60 text-gray-300 border border-dark-600/50;
    @apply hover:bg-dark-700/70 hover:text-gray-200 hover:border-dark-500/50 hover:shadow-md;
    @apply focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-dark-500 focus:ring-offset-dark-900;
    @apply transition-all duration-200;
  }

  /* Glass Card Effect */
  .glass-card {
    @apply bg-dark-900/30 backdrop-blur-sm border border-dark-700/50 shadow-2xl;
  }

  /* Line Clamp Utility */
  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  /* Responsive Grid */
  @media (max-width: 640px) {
    .btn-primary, .btn-secondary {
      @apply w-full justify-center;
    }
  }
</style>

<script>
  // TypeScript interfaces
  interface Prompt {
    id: string;
    name: string;
    description: string;
    category: 'work' | 'personal' | 'shared';
    tags?: string[];
    author?: string;
    updatedAt: string;
    variables?: Array<{
      name: string;
      description: string;
      type: string;
      required: boolean;
      defaultValue?: any;
    }>;
  }

  interface SearchUpdateEvent extends CustomEvent {
    detail: {
      searchParams: string;
    };
  }

  interface SearchResults {
    results: Prompt[];
    count: number;
  }

  document.addEventListener('DOMContentLoaded', (): void => {
    const resultsContainer: HTMLElement | null = document.getElementById('results-container');
    
    if (!resultsContainer) {
      console.error('Results container not found');
      return;
    }
    
    // Listen for search updates from SearchBar component
    window.addEventListener('searchUpdate', async (e: Event): Promise<void> => {
      const searchEvent = e as SearchUpdateEvent;
      const { searchParams } = searchEvent.detail;
      
      try {
        // Show loading state with dark theme
        resultsContainer.innerHTML = `
          <div class="glass-card rounded-xl p-12 text-center">
            <div class="w-12 h-12 mx-auto mb-4 border-4 border-primary-600/30 border-t-primary-500 rounded-full animate-spin"></div>
            <h3 class="text-lg font-semibold text-gray-200 mb-2">Searching...</h3>
            <p class="text-gray-400">Finding your perfect prompts</p>
          </div>
        `;
        
        // Fetch search results
        const response: Response = await fetch(`/api/search?${searchParams}`);
        const data: SearchResults = await response.json();
        
        if (response.ok) {
          const results: Prompt[] = data.results || [];
          
          // Update results display with dark theme
          if (results.length > 0) {
            resultsContainer.innerHTML = `
              <div class="space-y-6">
                <div class="glass-card rounded-xl p-6">
                  <div class="flex items-center justify-between">
                    <h2 class="text-xl font-bold text-gray-100 flex items-center">
                      <svg class="w-6 h-6 mr-3 text-accent-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2H9z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5a2 2 0 012-2h2a2 2 0 012 2v0a2 2 0 01-2 2H9a2 2 0 01-2-2v0z"></path>
                      </svg>
                      Search Results
                    </h2>
                    <div class="flex items-center space-x-3">
                      <span class="inline-flex items-center px-3 py-1 bg-accent-900/30 text-accent-300 rounded-full text-sm font-medium border border-accent-700/30">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
                        </svg>
                        ${results.length} result${results.length !== 1 ? 's' : ''}
                      </span>
                    </div>
                  </div>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6" id="search-results">
                  ${results.map((prompt: Prompt) => createPromptCardHTML(prompt)).join('')}
                </div>
              </div>
            `;
          } else {
            resultsContainer.innerHTML = `
              <div class="glass-card rounded-xl p-12 text-center">
                <div class="w-16 h-16 mx-auto mb-6 bg-gradient-to-br from-gray-600 to-gray-700 rounded-full flex items-center justify-center">
                  <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                  </svg>
                </div>
                <h3 class="text-lg font-semibold text-gray-200 mb-3">No results found</h3>
                <p class="text-gray-400 mb-6 max-w-md mx-auto">We couldn't find any prompts matching your search criteria. Try adjusting your filters or explore all prompts.</p>
                <div class="flex flex-col sm:flex-row gap-4 items-center justify-center">
                  <a href="/prompts" class="btn-primary">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                    </svg>
                    Explore All Prompts
                  </a>
                  <a href="/prompts/new" class="btn-secondary">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                    Create New Prompt
                  </a>
                </div>
              </div>
            `;
          }
          
          // Dispatch results event for SearchBar to update count
          window.dispatchEvent(new CustomEvent('searchResults', {
            detail: { count: results.length, results }
          }));
        }
      } catch (error: unknown) {
        console.error('Search error:', error);
        const errorMessage = error instanceof Error ? error.message : 'Unknown error';
        resultsContainer.innerHTML = `
          <div class="glass-card rounded-xl p-12 text-center">
            <div class="w-16 h-16 mx-auto mb-6 bg-gradient-to-br from-red-600 to-red-700 rounded-full flex items-center justify-center">
              <svg class="w-8 h-8 text-red-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h3 class="text-lg font-semibold text-red-200 mb-3">Search Error</h3>
            <p class="text-red-300 mb-6">Failed to perform search. Please try again.</p>
            <button onclick="window.location.reload()" class="btn-secondary">
              Try Again
            </button>
          </div>
        `;
      }
    });
    
    // TypeScript helper function to create prompt card HTML
    function createPromptCardHTML(prompt: Prompt): string {
      const formatDate = (dateString: string): string => {
        const date: Date = new Date(dateString);
        return date.toLocaleDateString('en-US', {
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        });
      };
      
      const getCategoryColor = (category: string): string => {
        switch (category) {
          case 'work': return 'bg-primary-600 text-white hover:bg-primary-700';
          case 'personal': return 'bg-accent-600 text-white hover:bg-accent-700';
          case 'shared': return 'bg-success-600 text-white hover:bg-success-700';
          default: return 'bg-dark-600 text-white hover:bg-dark-700';
        }
      };
      
      const tagsHtml: string = prompt.tags && prompt.tags.length > 0 ? `
        <div class="flex flex-wrap gap-2 mb-4">
          ${prompt.tags.map((tag: string) => `
            <span class="inline-flex items-center px-3 py-1 text-xs font-medium bg-primary-900/30 text-primary-300 rounded-full border border-primary-700/30 hover:bg-primary-800/40 transition-colors duration-150">
              #${tag}
            </span>
          `).join('')}
        </div>
      ` : '';
      
      const variableCount: string = prompt.variables ? `<span>${prompt.variables.length} variables</span>` : '';
      
      return `
        <div class="glass-card rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 hover:transform hover:scale-105 group cursor-pointer" onclick="window.location.href='/prompts/${prompt.id}'">
          <div class="p-6">
            <div class="flex items-start justify-between mb-4">
              <div class="flex-1 min-w-0">
                <h3 class="text-xl font-bold text-gray-100 mb-3 group-hover:text-white transition-colors">
                  ${prompt.name}
                </h3>
                <p class="text-gray-300 leading-relaxed line-clamp-2">
                  ${prompt.description}
                </p>
              </div>
              <span class="ml-4 px-3 py-1 text-xs font-semibold rounded-full uppercase tracking-wide transition-colors duration-200 cursor-pointer ${getCategoryColor(prompt.category)}">
                ${prompt.category}
              </span>
            </div>
            
            ${tagsHtml}
            
            <div class="flex items-center justify-between pt-4 border-t border-dark-700/30">
              <div class="flex items-center space-x-4 text-xs text-gray-400">
                ${prompt.author ? `<span>By ${prompt.author}</span>` : ''}
                <span>Updated ${formatDate(prompt.updatedAt)}</span>
                ${variableCount}
              </div>
              <div class="flex items-center space-x-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200" onclick="event.stopPropagation()">
                <a href="/prompts/${prompt.id}/edit" class="inline-flex items-center px-3 py-1 text-xs font-medium bg-dark-700/50 text-gray-300 rounded-md hover:bg-dark-600/60 hover:text-gray-200 transition-all duration-200">
                  <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                  </svg>
                  Edit
                </a>
              </div>
            </div>
          </div>
        </div>
      `;
    }
  });
</script>
